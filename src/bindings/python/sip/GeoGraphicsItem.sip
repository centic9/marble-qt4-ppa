//
//     Copyright 2009 Simon Edwards <simon@simonzone.com>

//                 Generated by twine

// This file is part of PyKDE4.

// PyKDE4 is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as
// published by the Free Software Foundation; either version 2.1 of
// the License, or (at your option) any later version.

// PyKDE4 is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with this program.  If not, see <http://www.gnu.org/licenses/>.

namespace Marble
{
 
class GeoGraphicsItem : Marble::MarbleGraphicsItem
{
%TypeHeaderCode
#include <GeoGraphicsItem.h>
%End

public:
                            GeoGraphicsItem ();
//ig                            GeoGraphicsItem (GeoGraphicsItemPrivate* d_ptr);
    Marble::GeoDataCoordinates  coordinate () const;
//ig    void                    coordinate (qreal& longitude /Out/, qreal& latitude /Out/, qreal& altitude /Out/) const;
    void                    setCoordinate (qreal longitude, qreal latitude, qreal altitude = 0);
    void                    setCoordinate (const Marble::GeoDataCoordinates& point);
    void                    setTarget (const QString& target);


    virtual ~GeoGraphicsItem ();
    enum GeoGraphicsItemFlag
    {
        NoOptions,
        ItemIsMovable,
        ItemIsSelectable,
        ItemIsVisible
    };
    typedef QFlags<Marble::GeoGraphicsItem::GeoGraphicsItemFlag> GeoGraphicsItemFlags;
    QString                 target () const;
    Marble::GeoGraphicsItem::GeoGraphicsItemFlags  flags () const;
    void                    setFlag (Marble::GeoGraphicsItem::GeoGraphicsItemFlag flag, bool enabled = 1);
    void                    setFlags (Marble::GeoGraphicsItem::GeoGraphicsItemFlags flags);
    int                     minLodPixels () const;
    void                    setMinLodPixels (int pixels);
    int                     maxLodPixels () const;
    void                    setMaxLodPixels (int pixels);
    Marble::GeoDataLatLonAltBox  latLonAltBox () const;
    void                    setLatLonAltBox (const Marble::GeoDataLatLonAltBox& latLonAltBox);
    QList<QPointF>          positions () const;
    int                     minZoomLevel () const;
    void                    setMinZoomLevel (int zoomLevel);
    Marble::GeoDataStyle*   style () const;
    void                    setStyle (Marble::GeoDataStyle* style);
};
// GeoGraphicsItem

};
// Marble


